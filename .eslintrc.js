/* eslint-disable quote-props */

module.exports = {
  root: true,
  env: {
    node: true,
  },
  extends: [
    '@vue/standard',
    '@vue/typescript/recommended'
  ],
  parserOptions: {
    parser: '@typescript-eslint/parser',
    ecmaVersion: 2020,
  },
  rules: {
    '@typescript-eslint/ban-ts-ignore': 'off',
    '@typescript-eslint/camelcase': 'off',
    '@typescript-eslint/explicit-function-return-type': 'error',
    '@typescript-eslint/interface-name-prefix': [ 'error', { 'prefixWithI': 'always' } ],
    '@typescript-eslint/no-unused-vars': [ 'error' ],
    '@typescript-eslint/typedef': [ 'error', {
      'arrayDestructuring': false,
      'arrowParameter': false,
      'memberVariableDeclaration': true,
      'objectDestructuring': false,
      'parameter': true,
      'propertyDeclaration': true,
      'variableDeclaration': false,
      'variableDeclarationIgnoreFunction': false,
    } ],
    '@typescript-eslint/no-explicit-any': 'off',
    '@typescript-eslint/no-inferrable-types': [ 'error', { 'ignoreParameters': true, 'ignoreProperties': true } ],
    '@typescript-eslint/no-var-requires': 'off',
    'array-bracket-spacing': 'off',
    'comma-dangle': 'off',
    'keyword-spacing': 'off',
    'linebreak-style': [ 'error', 'unix' ],
    'lines-between-class-members': 'off',
    'no-console': 'error',
    'no-debugger': 'error',
    'object-curly-spacing': 'off',
    'operator-linebreak': 'off',
    'padded-blocks': 'off',
    'quote-props': [ 'error', 'as-needed' ],
    'quotes': [ 'error', 'single' ],
    'semi': [ 'error', 'always' ],
    'space-before-function-paren': 'off',
    'space-in-parens': 'off',
    'standard/no-callback-literal': 'off',
  },
  overrides: [
    {
      files: [
        '**/src/**/*.spec.ts',
      ],
      env: {
        mocha: true,
      },
    },
    {
      files: [
        'src/api/**',
        'src/router/**',
        'src/services/**',
        'src/store/**',
        'src/components/**',
        'src/App.vue',
      ],
      rules: {
        '@typescript-eslint/camelcase': 'off',
        '@typescript-eslint/explicit-function-return-type': 'off',
        '@typescript-eslint/no-empty-function': 'off',
        '@typescript-eslint/no-unused-vars': 'off',
        '@typescript-eslint/no-this-alias': 'off',
        '@typescript-eslint/no-var-requires': 'off',
        '@typescript-eslint/typedef': 'off',
        'array-bracket-spacing': 'off',
        'arrow-spacing': 'off',
        'block-spacing': 'off',
        'brace-style': 'off',
        'comma-dangle': 'off',
        'comma-spacing': 'off',
        'curly': 'off',
        'dot-notation': 'off',
        'eqeqeq': 'off',
        'eol-last': 'off',
        'import/first': 'off',
        'indent': 'off',
        'key-spacing': 'off',
        'keyword-spacing': 'off',
        'linebreak-style': 'off',
        'no-extra-parens': 'off',
        'no-global-assign': 'off',
        'no-multi-spaces': 'off',
        'no-multiple-empty-lines': 'off',
        'no-tabs': 'off',
        'no-unneeded-ternary': 'off',
        'no-useless-escape': 'off',
        'no-var': 'off',
        'no-void': 'off',
        'node/no-deprecated-api': 'off',
        'object-curly-newline': 'off',
        'object-curly-spacing': 'off',
        'object-property-newline': 'off',
        'operator-linebreak': 'off',
        'padded-blocks': 'off',
        'prefer-const': 'off',
        'semi': 'off',
        'space-before-blocks': 'off',
        'space-before-function-paren': 'off',
        'space-in-parens': 'off',
        'space-infix-ops': 'off',
        'space-unary-ops': 'off',
        'spaced-comment': 'off',
        'quote-props': 'off',
        'quotes': 'off',
        'yoda': 'off',
      },
    },
  ],
};

